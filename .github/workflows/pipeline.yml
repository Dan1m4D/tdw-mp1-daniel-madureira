name: CI/CD Workflow
run-name: ${{ github.workflow }} - ${{ github.event_name }} - ${{ github.ref }} by ${{ github.actor }}

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  prettier:
    name: Prettier
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Run Prettier check
        run: npm run prettier:check

  test:
    name: Jest Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:coverage

      - name: Jest Coverage Comment
        uses: MishaKav/jest-coverage-comment@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-summary-path: ./coverage/coverage-summary.json
          title: Jest Coverage Comment
          summary-title: Summary
          badge-title: Coverage
          text-instead-badge: false
          hide-comment: false
          create-new-comment: false
          hide-summary: false
          remove-links-to-files: false
          remove-links-to-lines: false
          report-only-changed-files: false

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: [lint, prettier, test]
    if: github.event_name == 'pull_request' && ( github.base_ref == 'main' || github.base_ref == 'dev' )
    environment: ${{ github.base_ref == 'main' || github.base_ref == 'dev' && 'production' || 'development' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Build project
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_SECRET: ${{ secrets.CONTENTFUL_PREVIEW_SECRET }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}
        run: npm run build

  deploy:
    name: Deploy to netlify
    runs-on: ubuntu-latest
    environment: production
    needs: build
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Build project
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_SECRET: ${{ secrets.CONTENTFUL_PREVIEW_SECRET }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}
        run: npm run build

      - name: Deploy to Production
        run: echo "Deploying to production server..."

      - name: DEPLOY TO NETLIFY
        run: npx netlify deploy --site=${{ secrets.NETLIFY_SITE_ID }} --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} --prod
