name: Redeploy site on content update

on:
  repository_dispatch:
    types: [publish-event]
  schedule:
    - cron: "0 0 * * 1-5"

jobs:
  redeploy:
    name: Rebuild and Deploy Site
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm ci

      - name: Build the site
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_SECRET: ${{ secrets.CONTENTFUL_PREVIEW_SECRET }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}
        run: npm run build

      - name: Deploy to Netlify
        id: netlify_deploy
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_SECRET: ${{ secrets.CONTENTFUL_PREVIEW_SECRET }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}
        run: npx netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod

      - name: Get Deployment Timestamp
        if: success()
        id: timestamp
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")
          echo "time=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Update Deployment Badge
        if: success()
        uses: Schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: b8da1bf6d1551c77df858bcfd3ec7b1d
          filename: deployment.json
          label: Deployment ðŸš€
          message: Successful on ${{ steps.timestamp.outputs.time }}
          color: brightgreen

      - name: Update Deployment Badge on Failure
        if: failure()
        uses: Schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: b8da1bf6d1551c77df858bcfd3ec7b1d
          filename: deployment.json
          label: Deployment ðŸš€
          message: Failed
          color: red
